pipeline {
    agent any

    options {
        buildDiscarder(logRotator(numToKeepStr:'5'))
    }

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub')
        POSTGRES_CREDENTIALS = credentials('postgres')
        MONGODB_CREDENTIALS = credentials('mongodb')
        REDIS_CREDENTIALS = credentials('redis')
    }

    tools {
        // Install the Maven version configured as "Maven" and add it to the path.
        maven "Maven"
    }

    stages {
        stage('Build') {
            steps {
                git branch: 'feature/docker', credentialsId: 'github', url: 'https://github.com/TheExkaliburg/MoreFair.git'
                sh 'mvn -Dmaven.test.failure.ignore=true clean package'
            }

            post {
                success {
                    junit allowEmptyResults: true, skipOldReports: true, testResults: 'backend/target/surefire-reports/TEST-*.xml'
                }
            }
        }

        stage('Docker') {
            steps {
                sh 'sudo docker build -t kaliburg/fairgame:staging .'
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | sudo docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
                sh 'sudo docker push kaliburg/fairgame:staging'
            }
            post {
                always {
                    sh 'sudo docker logout'
                }
            }
        }

        stage('Docker Compose') {
            steps {
                sh 'ENV POSTGRES_PASSWORD=$POSTGRES_CREDENTIALS_PSW'
                sh 'ENV MONGODB_PASSWORD=$MONGODB_CREDENTIALS_PSW'
                sh 'ENV REDIS_PASSWORD=$REDIS_CREDENTIALS_PSW'
                sh 'sudo docker compose -f docker-compose-staging.yml up --detach --pull always --force-recreate'
            }
        }
    }
}
